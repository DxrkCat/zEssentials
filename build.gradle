plugins {
    id 'java'
    id("com.dorongold.task-tree") version "2.1.1"
}

group = 'fr.maxlego08.essentials'
version = property('version')

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

subprojects {
    apply plugin: 'java'

    group = 'fr.maxlego08.essentials'
    version = property('version')

    repositories {
        mavenCentral()
        maven { url = 'https://repo.papermc.io/repository/maven-public/' }
        maven {
            name = "devmart-other"
            url = "https://nexuslite.gcnt.net/repos/other/"
        }
        maven { url 'https://jitpack.io' }
        maven {url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'}
    }

    dependencies {
        implementation "com.tcoded:FoliaLib:0.3.1"
        implementation 'com.github.Maxlego08:Sarah:1.2'
        implementation('redis.clients:jedis:5.1.2') {
            exclude group: 'com.google.code.gson', module: 'gson'
            exclude group: 'org.slf4j', module: 'slf4j-api'
        }

        compileOnly 'io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT'
        compileOnly 'com.github.Maxlego08:zMenu-API:2fe96ac6ab'
        compileOnly 'me.clip:placeholderapi:2.11.5'

        testImplementation 'junit:junit:4.12'
    }
}

tasks.register("buildAll") {
    group = "essentials"
    description = "Build all Essentials related plugins"
    dependsOn(
            ":EssentialsApi:build",
            ":Hooks:Vault:build",
            ":Hooks:Redis:build",
            ":Essentials:build"
    )
}
